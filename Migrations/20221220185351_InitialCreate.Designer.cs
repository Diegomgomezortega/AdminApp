// <auto-generated />
using System;
using AdminApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminApp.Migrations
{
    [DbContext(typeof(AdminAppContext))]
    [Migration("20221220185351_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminApp.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountAllowed")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("b850770d-270d-4d96-b69e-062030a37d27"),
                            AmountAllowed = 10000.0,
                            Description = "Gastos Realizados en comida mensual/diaria",
                            Name = "Comida"
                        },
                        new
                        {
                            CategoryId = new Guid("b850770d-270d-4d96-b69e-062030a37d58"),
                            AmountAllowed = 7000.0,
                            Description = "Gastos Realizados Mantenimiento",
                            Name = "Mantenimiento Casa"
                        });
                });

            modelBuilder.Entity("AdminApp.Models.Transaccion", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Resumen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transaction", (string)null);

                    b.HasData(
                        new
                        {
                            TransactionId = new Guid("b850770d-270d-4d96-b69e-062030a37d11"),
                            CategoryId = new Guid("b850770d-270d-4d96-b69e-062030a37d27"),
                            Date = new DateTime(2022, 12, 20, 15, 53, 49, 337, DateTimeKind.Local).AddTicks(9744),
                            Description = "Compra mensual y asado",
                            Title = "Compra del dino",
                            Type = 3
                        },
                        new
                        {
                            TransactionId = new Guid("b850770d-270d-4d96-b69e-062030a37d37"),
                            CategoryId = new Guid("b850770d-270d-4d96-b69e-062030a37d58"),
                            Date = new DateTime(2022, 12, 20, 15, 53, 49, 337, DateTimeKind.Local).AddTicks(9776),
                            Description = "Reparacion Inodoro",
                            Title = "Gotita",
                            Type = 0
                        });
                });

            modelBuilder.Entity("AdminApp.Models.Transaccion", b =>
                {
                    b.HasOne("AdminApp.Models.Category", "Category")
                        .WithMany("TransactionsList")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AdminApp.Models.Category", b =>
                {
                    b.Navigation("TransactionsList");
                });
#pragma warning restore 612, 618
        }
    }
}
